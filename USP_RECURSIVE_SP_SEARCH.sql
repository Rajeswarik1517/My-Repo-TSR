
IF OBJECT_ID('USP_RECURSIVE_SP_SEARCH', 'P') IS NOT NULL
    DROP PROCEDURE USP_RECURSIVE_SP_SEARCH
GO
--USP_RECURSIVE_SP_SEARCH 'PA_PS_FIN_ID%VM_PA_PROJECT'
CREATE PROCEDURE USP_RECURSIVE_SP_SEARCH (@SEARCH_STRING VARCHAR(MAX))
AS
BEGIN
DECLARE @COUNT INT=1,@LOOP_COUNT INT,@S_SP_NAME VARCHAR(MAX)

CREATE TABLE #TEMP_SPLIST(SNO INT IDENTITY(1,1),S_TYPE VARCHAR(255),S_SP_NAME VARCHAR(MAX),S_SP_PARENT VARCHAR(MAX), IS_CHECKED BIT DEFAULT 0)
CREATE TABLE #TEMP_SPLIST_TEMP(S_TYPE VARCHAR(255),S_SP_NAME VARCHAR(MAX),S_SP_PARENT VARCHAR(MAX))
--SELECT * FROM #TEMP_SPLIST

INSERT INTO #TEMP_SPLIST(S_TYPE,S_SP_NAME,S_SP_PARENT)
EXEC SPSSEARCHCODE @SEARCH_STRING

UPDATE #TEMP_SPLIST SET S_SP_PARENT=@SEARCH_STRING WHERE S_SP_PARENT IS NULL
--SELECT * FROM #TEMP_SPLIST

SELECT @LOOP_COUNT=MAX(SNO) FROM #TEMP_SPLIST

WHILE(@COUNT<=@LOOP_COUNT)
		BEGIN
		  SELECT @S_SP_NAME=S_SP_NAME FROM #TEMP_SPLIST WHERE SNO=@COUNT AND IS_CHECKED=0
		  IF(@S_SP_NAME<>'')
		  BEGIN
			INSERT INTO #TEMP_SPLIST_TEMP(S_TYPE,S_SP_NAME,S_SP_PARENT)
			EXEC SPSSEARCHCODE @S_SP_NAME

			DELETE A FROM #TEMP_SPLIST_TEMP A JOIN #TEMP_SPLIST B ON A.S_TYPE=B.S_TYPE AND A.S_SP_NAME=B.S_SP_NAME

			INSERT INTO #TEMP_SPLIST(S_TYPE,S_SP_NAME,S_SP_PARENT)
			SELECT S_TYPE,S_SP_NAME,S_SP_PARENT FROM #TEMP_SPLIST_TEMP

			UPDATE #TEMP_SPLIST SET S_SP_PARENT=@S_SP_NAME WHERE S_SP_PARENT IS NULL
			UPDATE #TEMP_SPLIST SET IS_CHECKED=1 WHERE SNO=@COUNT
		  END
		  SET @COUNT=@COUNT+1;
		  SELECT @LOOP_COUNT=MAX(SNO) FROM #TEMP_SPLIST
		END
		SELECT S_TYPE,S_DB_NAME=DB_NAME(),S_SP_NAME,S_SP_PARENT FROM #TEMP_SPLIST
END